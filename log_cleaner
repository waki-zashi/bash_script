#!/bin/bash
if [ $# -ne 2 ]; then
    echo "Usage: $0 <log_directory> <threshold_percentage>" 
    exit 1
fi

LOG_DIR=$1
THRESHOLD=$2
BACKUP_DIR="$HOME/backup"
N=100

# Input validation
if ! [[ "$THRESHOLD" =~ ^[0-9]+$ ]]; then
    echo "Error: Threshold must be a number between 0 and 100" 
    exit 1
fi

if [ "$THRESHOLD" -lt 0 ] || [ "$THRESHOLD" -gt 100 ]; then 
    echo "Error: Threshold must be between 0 and 100" 
    exit 1
fi

if [ ! -d "$LOG_DIR" ]; then
    echo "Error: Directory $LOG_DIR does not exist" 
    exit 2
fi

if [ ! -d "$BACKUP_DIR" ]; then
    echo "Directory $BACKUP_DIR not found, creating..." 
    mkdir -p "$BACKUP_DIR"
fi

# Get current disk usage percentage
USAGE_PERCENT=$(df "$LOG_DIR" | awk 'NR==2 {gsub(/%/, "", $5); print $5}')

# Calculate trigger threshold (N% of user threshold)
THRESHOLD_N=$((THRESHOLD * N / 100))
# Ensure minimum threshold of 1% if user threshold is positive
if [ $THRESHOLD_N -eq 0 ] && [ $THRESHOLD -gt 0 ]; then
    THRESHOLD_N=1
fi

echo "Directory $LOG_DIR uses $USAGE_PERCENT% of filesystem space"
echo "Threshold: $THRESHOLD% (action triggered at ${THRESHOLD_N}%)"

# Check if usage exceeds threshold
if [ $USAGE_PERCENT -gt $THRESHOLD_N ]; then
    echo "Threshold ${THRESHOLD_N}% exceeded. Starting archive..."

    # Find all files sorted by modification time (oldest first)
    FILES_TO_ARCHIVE=()
    while IFS= read -r -d '' file; do
        FILES_TO_ARCHIVE+=("$file")
    done < <(find "$LOG_DIR" -type f -printf "%T@ %p\0" | sort -zn | cut -zd' ' -f2-)
    
    if [ ${#FILES_TO_ARCHIVE[@]} -eq 0 ]; then
        echo "No files to archive."
        exit 0
    fi

    # NEW: Dynamic archiving - file by file with usage check
    M=0
    ARCHIVED_FILES=()
    CURRENT_USAGE=$USAGE_PERCENT
    
    # Create main archive name
    ARCHIVE_NAME="$BACKUP_DIR/Log_backup_$(date +%Y%m%d_%H%M%S).tar.gz"
    
    for file in "${FILES_TO_ARCHIVE[@]}"; do
        # Check current disk usage
        CURRENT_USAGE=$(df "$LOG_DIR" | awk 'NR==2 {gsub(/%/, "", $5); print $5}')
        
        # Stop if usage dropped below threshold
        if [ $CURRENT_USAGE -le $THRESHOLD_N ]; then
            echo "Usage dropped to ${CURRENT_USAGE}%. Stopping archive."
            break
        fi
        
        # Archive single file (append to archive)
        if [ $M -eq 0 ]; then
            # Create new archive for first file
            (cd "$LOG_DIR" && tar -czf "$ARCHIVE_NAME" -- "${file#$LOG_DIR/}")
        else
            # Append to existing archive
            (cd "$LOG_DIR" && tar -czf "$ARCHIVE_NAME" --append -- "${file#$LOG_DIR/}")
        fi
        
        if [ $? -eq 0 ]; then
            # Remove archived file
            rm -f "$file"
            ARCHIVED_FILES+=("$file")
            M=$((M + 1))
            echo "Archived: $file (Usage: ${CURRENT_USAGE}%)"
        else
            echo "Failed to archive: $file"
            continue
        fi
    done

    if [ ${#ARCHIVED_FILES[@]} -eq 0 ]; then
        echo "No files were archived."
    else
        # Get final disk usage
        CURRENT_USAGE=$(df "$LOG_DIR" | awk 'NR==2 {gsub(/%/, "", $5); print $5}')
        echo "Archive completed successfully. Archived $M files."
        echo "Current disk usage: $CURRENT_USAGE%"
    fi

else
    echo "Threshold not exceeded. No action needed."
fi

exit 0
